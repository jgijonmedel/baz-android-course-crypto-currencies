package com.jimmy.cryptocurrencies.domain.constants

enum class CryptocurrencyDirectory(val fullName: String) {
    BTC(fullName = "Bitcoin"),
    ETH(fullName = "Ethereum"),
    USDT(fullName = "Tether"),
    USDC(fullName = "USD Coin"),
    BNB(fullName = "BNB"),
    BUSD(fullName = "Binance USD"),
    XRP(fullName = "XRP"),
    ADA(fullName = "Cardano"),
    SOL(fullName = "Solana"),
    DOGE(fullName = "Dogecoin"),
    DOT(fullName = "Polkadot"),
    DAI(fullName = "Dai"),
    MATIC(fullName = "Polygon"),
    SHIB(fullName = "Shiba Inu"),
    TRX(fullName = "TRON"),
    AVAX(fullName = "Avalanche"),
    WBTC(fullName = "Wrapped Bitcoin"),
    LEO(fullName = "UNUS SED LEO"),
    ATOM(fullName = "Cosmos"),
    UNI(fullName = "Uniswap"),
    ETC(fullName = "Ethereum cl√°sico"),
    LTC(fullName = "Litecoin"),
    LINK(fullName = "Chainlink"),
    FTT(fullName = "FTX Token"),
    NEAR(fullName = "NEAR Protocol"),
    XL(fullName = "Stellar"),
    CRO(fullName = "Cronos"),
    XMR(fullName = "Monero"),
    ALGO(fullName = "Algorand"),
    BCH(fullName = "Bitcoin Cash"),
    BTCB(fullName = "Bitcoin BEP2"),
    LUNC(fullName = "Terra Classic"),
    XEC(fullName = "eCash"),
    USDD(fullName = "USDD"),
    MIOTA(fullName = "IOTA"),
    GRT(fullName = "The Graph"),
    HT(fullName = "Huobi Token"),
    USDN(fullName = "Neutrino USD"),
    CAKE(fullName = "PancakeSwap"),
    MKR(fullName = "Maker"),
    KLAY(fullName = "Klaytn"),
    SNX(fullName = "Synthetix"),
    NEO(fullName = "Neo"),
    FTM(fullName = "Fantom"),
    HNT(fullName = "Helium"),
    LDO(fullName = "Lido DAO"),
    RUNE(fullName = "THORChain"),
    PAXG(fullName = "PAX Gold"),
    CRV(fullName = "Curve DAO Token"),
    NEXO(fullName = "Nexo"),
    ENJ(fullName = "Enjin Coin"),
    BAT(fullName = "Basic Attention Token"),
    GT(fullName = "GateToken"),
    STX(fullName = "Stacks"),
    DASH(fullName = "Dash"),
    WAVES(fullName = "Waves"),
    RVN(fullName = "Ravencoin"),
    ZIL(fullName = "Zilliqa"),
    FEI(fullName = "Fei USD"),
    LRC(fullName = "Loopring"),
    MINA(fullName = "Mina"),
    TWT(fullName = "Trust Wallet Token"),
    KAVA(fullName = "Kava"),
    COMP(fullName = "Compound"),
    GMT(fullName = "STEPN"),
    BTG(fullName = "Bitcoin Gold"),
    XEM(fullName = "NEM"),
    LUNA(fullName = "Terra"),
    CELO(fullName = "Celo"),
    DCR(fullName = "Decred"),
    HOT(fullName = "Holo"),
    CEL(fullName = "Celsius"),
    INCH(fullName = "1inch	"),
    KSM(fullName = "Kusama"),
    USTC(fullName = "TerraClassicUSD"),
    GNO(fullName = "Gnosis"),
    APE(fullName = "ApeCoin"),
    FLOW(fullName = "Flow"),
    VET(fullName = "VeChain"),
    ICP(fullName = "Internet Computer"),
    FIL(fullName = "Filecoin"),
    CHZ(fullName = "Chiliz"),
    XTZ(fullName = "Tezos"),
    XDC(fullName = "XDC Network"),
    AR(fullName = "Arweave"),
    CVX(fullName = "Convex Finance"),
    BNX(fullName = "BinaryX"),
    YFI(fullName = "yearn.finance"),
    QTUM(fullName = "Qtum"),
    ANKR(fullName = "Ankr"),
    GUSD(fullName = "Gemini Dollar"),
    GALA(fullName = "Gala"),
    NXM(fullName = "NXM"),
    ROSE(fullName = "Oasis Network"),
    KDA(fullName = "Kadena"),
    GLM(fullName = "Golem"),
    TFUEL(fullName = "Theta Fuel"),
    ENS(fullName = "Ethereum Name Service"),
    IOTX(fullName = "IoTeX"),
    RPL(fullName = "Rocket Pool"),
    BTRST(fullName = "Braintrust"),
    MCO(fullName = "MCO"),
    MANA(fullName = "Decentraland"),
    HBAR(fullName = "Hedera"),
    QNT(fullName = "Quant"),
    EOS(fullName = "EOS"),
    SAND(fullName = "The Sandbox"),
    EGLD(fullName = "Elrond"),
    TUSD(fullName = "TrueUSD"),
    AAVE(fullName = "Aave"),
    THETA(fullName = "Theta Network"),
    AXS(fullName = "Axie Infinity"),
    USDP(fullName = "Pax Dollar"),
    BSV(fullName = "Bitcoin SV"),
    OKB(fullName = "OKB"),
    KCS(fullName = "KuCoin Token"),
    ZEC(fullName = "Zcash"),
    BTTOLD(fullName = "BitTorrent"),
    BTT(fullName = "BitTorrent (New)");

    companion object {
        fun getName(book: String): String {
            return try {
                valueOf(book).fullName
            } catch (ex: IllegalArgumentException) {
                book
            }
        }
    }
}
